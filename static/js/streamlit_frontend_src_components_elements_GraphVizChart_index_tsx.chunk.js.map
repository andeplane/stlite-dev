{"version":3,"file":"static/js/streamlit_frontend_src_components_elements_GraphVizChart_index_tsx.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;;AAEA;AAIA;AAAA;AAHA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA7EA;AA+EA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;;;;;;;;;;ACAA;;;;;;;;;;ACAA","sources":["/home/runner/work/stlite-dev/stlite-dev/streamlit/frontend/src/components/elements/GraphVizChart/GraphVizChart.tsx","/home/runner/work/stlite-dev/stlite-dev/streamlit/frontend/src/components/elements/GraphVizChart/index.tsx","/home/runner/work/stlite-dev/stlite-dev/streamlit/frontend/src/components/elements/GraphVizChart/styled-components.ts","/home/runner/work/stlite-dev/stlite-dev/packages/mountable/ignored|/home/runner/work/stlite-dev/stlite-dev/node_modules/viz.js|crypto","/home/runner/work/stlite-dev/stlite-dev/packages/mountable/ignored|/home/runner/work/stlite-dev/stlite-dev/node_modules/viz.js|fs","/home/runner/work/stlite-dev/stlite-dev/packages/mountable/ignored|/home/runner/work/stlite-dev/stlite-dev/node_modules/viz.js|path"],"sourcesContent":["/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useEffect } from \"react\"\nimport { select } from \"d3\"\nimport { graphviz } from \"d3-graphviz\"\nimport { logError } from \"src/lib/log\"\nimport withFullScreenWrapper from \"src/hocs/withFullScreenWrapper\"\nimport { GraphVizChart as GraphVizChartProto } from \"src/autogen/proto\"\nimport { StyledGraphVizChart } from \"./styled-components\"\n\nexport interface GraphVizChartProps {\n  width: number\n  element: GraphVizChartProto\n  height?: number\n}\n\ninterface Dimensions {\n  chartWidth: number\n  chartHeight: number\n}\n\n// Use d3Graphviz in a dummy expression so the library actually gets loaded.\n// This way it registers itself in d3 as a plugin at this point.\nconst dummyGraphviz = graphviz\ndummyGraphviz // eslint-disable-line @typescript-eslint/no-unused-expressions\n\nexport function GraphVizChart({\n  width: propWidth,\n  element,\n  height: propHeight,\n}: GraphVizChartProps): ReactElement {\n  const chartId = `graphviz-chart-${element.elementId}`\n\n  let originalHeight = 0\n  let originalWidth = 0\n\n  const getChartData = (): string => {\n    return element.spec\n  }\n\n  const getChartDimensions = (): Dimensions => {\n    let chartWidth = originalWidth\n    let chartHeight = originalHeight\n\n    if (propHeight) {\n      // fullscreen\n      chartWidth = propWidth\n      chartHeight = propHeight\n    } else if (element.useContainerWidth) {\n      chartWidth = propWidth\n    }\n    return { chartWidth, chartHeight }\n  }\n\n  const updateChart = (): void => {\n    try {\n      // Layout and render the graph\n      const graph = graphviz(`#${chartId}`)\n        .zoom(false)\n        .fit(true)\n        .scale(1)\n        .renderDot(getChartData())\n        .on(\"end\", () => {\n          const node = select(`#${chartId} > svg`).node() as SVGGraphicsElement\n          if (node) {\n            originalHeight = node.getBBox().height\n            originalWidth = node.getBBox().width\n          }\n        })\n\n      const { chartHeight, chartWidth } = getChartDimensions()\n      if (chartHeight > 0) {\n        // Override or reset the graph height\n        graph.height(chartHeight)\n      }\n      if (chartWidth > 0) {\n        // Override or reset the graph width\n        graph.width(chartWidth)\n      }\n    } catch (error) {\n      logError(error)\n    }\n  }\n\n  useEffect(() => {\n    updateChart()\n  })\n\n  const elementDimensions = getChartDimensions()\n  const width: number = elementDimensions.chartWidth\n    ? elementDimensions.chartWidth\n    : propWidth\n  const height: number | undefined = elementDimensions.chartHeight\n    ? elementDimensions.chartHeight\n    : propHeight\n\n  return (\n    <StyledGraphVizChart\n      className=\"graphviz stGraphVizChart\"\n      id={chartId}\n      style={{ width, height }}\n    />\n  )\n}\n\nexport default withFullScreenWrapper(GraphVizChart)\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { default } from \"./GraphVizChart\"\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledGraphVizChart = styled.div(({ theme }) => ({\n  \"& *\": {\n    fontFamily: theme.genericFonts.bodyFont,\n    // Font sizes inside the SVG element are getting huge for some reason.\n    // Hacking together a number by eyeballing it:\n    // 12px in the SVG looks like 1rem outside, so 9.6px ~= 0.8rem.\n    fontSize: \"9.6px\",\n  },\n  \"& svg\": {\n    maxWidth: \"100%\",\n  },\n}))\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}