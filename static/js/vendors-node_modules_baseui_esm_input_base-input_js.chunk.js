"use strict";
(globalThis["webpackChunk_stlite_mountable"] = globalThis["webpackChunk_stlite_mountable"] || []).push([["vendors-node_modules_baseui_esm_input_base-input_js"],{

/***/ "../../node_modules/baseui/esm/icon/hide.js":
/*!**************************************************!*\
  !*** ../../node_modules/baseui/esm/icon/hide.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles */ "../../node_modules/baseui/esm/styles/styled.js");
/* harmony import */ var _helpers_overrides__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/overrides */ "../../node_modules/baseui/esm/helpers/overrides.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icon */ "../../node_modules/baseui/esm/icon/icon.js");
var _excluded = ["title", "size", "color", "overrides"];
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// BASEUI-GENERATED-REACT-ICON
// DO NOT EDIT THIS FILE DIRECTLY, SEE README.md




function Hide(props, ref) {
  var _useStyletron = (0,_styles__WEBPACK_IMPORTED_MODULE_1__.useStyletron)(),
    _useStyletron2 = _slicedToArray(_useStyletron, 2),
    theme = _useStyletron2[1];
  var _props$title = props.title,
    title = _props$title === void 0 ? 'Hide' : _props$title,
    size = props.size,
    color = props.color,
    _props$overrides = props.overrides,
    overrides = _props$overrides === void 0 ? {} : _props$overrides,
    restProps = _objectWithoutProperties(props, _excluded);
  var SvgOverride = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_2__.mergeOverride)(
  // Icons from the theme target the SVG override in the underlying Icon component
  {
    component: theme.icons && theme.icons.Hide ? theme.icons.Hide : null
  }, overrides && overrides.Svg ? (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_2__.toObjectOverride)(overrides.Svg) : {});
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icon__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({
    viewBox: "0 0 20 20",
    ref: ref,
    title: title,
    size: size,
    color: color,
    overrides: {
      Svg: SvgOverride
    }
  }, restProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M12.81 4.36l-1.77 1.78a4 4 0 00-4.9 4.9l-2.76 2.75C2.06 12.79.96 11.49.2 10a11 11 0 0112.6-5.64zm3.8 1.85c1.33 1 2.43 2.3 3.2 3.79a11 11 0 01-12.62 5.64l1.77-1.78a4 4 0 004.9-4.9l2.76-2.75zm-.25-3.99l1.42 1.42L3.64 17.78l-1.42-1.42L16.36 2.22z"
  }));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(Hide));

/***/ }),

/***/ "../../node_modules/baseui/esm/icon/show.js":
/*!**************************************************!*\
  !*** ../../node_modules/baseui/esm/icon/show.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles */ "../../node_modules/baseui/esm/styles/styled.js");
/* harmony import */ var _helpers_overrides__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/overrides */ "../../node_modules/baseui/esm/helpers/overrides.js");
/* harmony import */ var _icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icon */ "../../node_modules/baseui/esm/icon/icon.js");
var _excluded = ["title", "size", "color", "overrides"];
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// BASEUI-GENERATED-REACT-ICON
// DO NOT EDIT THIS FILE DIRECTLY, SEE README.md




function Show(props, ref) {
  var _useStyletron = (0,_styles__WEBPACK_IMPORTED_MODULE_1__.useStyletron)(),
    _useStyletron2 = _slicedToArray(_useStyletron, 2),
    theme = _useStyletron2[1];
  var _props$title = props.title,
    title = _props$title === void 0 ? 'Show' : _props$title,
    size = props.size,
    color = props.color,
    _props$overrides = props.overrides,
    overrides = _props$overrides === void 0 ? {} : _props$overrides,
    restProps = _objectWithoutProperties(props, _excluded);
  var SvgOverride = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_2__.mergeOverride)(
  // Icons from the theme target the SVG override in the underlying Icon component
  {
    component: theme.icons && theme.icons.Show ? theme.icons.Show : null
  }, overrides && overrides.Svg ? (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_2__.toObjectOverride)(overrides.Svg) : {});
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_icon__WEBPACK_IMPORTED_MODULE_3__["default"], _extends({
    viewBox: "0 0 20 20",
    ref: ref,
    title: title,
    size: size,
    color: color,
    overrides: {
      Svg: SvgOverride
    }
  }, restProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M.2 10a11 11 0 0119.6 0A11 11 0 01.2 10zm9.8 4a4 4 0 100-8 4 4 0 000 8zm0-2a2 2 0 110-4 2 2 0 010 4z"
  }));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(Show));

/***/ }),

/***/ "../../node_modules/baseui/esm/input/base-input.js":
/*!*********************************************************!*\
  !*** ../../node_modules/baseui/esm/input/base-input.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var _helpers_overrides__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/overrides */ "../../node_modules/baseui/esm/helpers/overrides.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "../../node_modules/baseui/esm/input/constants.js");
/* harmony import */ var _styled_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./styled-components */ "../../node_modules/baseui/esm/input/styled-components.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils */ "../../node_modules/baseui/esm/input/utils.js");
/* harmony import */ var _icon_hide__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../icon/hide */ "../../node_modules/baseui/esm/icon/hide.js");
/* harmony import */ var _icon_show__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../icon/show */ "../../node_modules/baseui/esm/icon/show.js");
/* harmony import */ var _utils_create_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/create-event */ "../../node_modules/baseui/esm/utils/create-event.js");
/* harmony import */ var _utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/focusVisible */ "../../node_modules/baseui/esm/utils/focusVisible.js");
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// eslint-disable-next-line @typescript-eslint/no-unused-vars

/* global window */









var NullComponent = function NullComponent() {
  return null;
};
var BaseInput = /*#__PURE__*/function (_React$Component) {
  _inherits(BaseInput, _React$Component);
  var _super = _createSuper(BaseInput);
  function BaseInput() {
    var _this;
    _classCallCheck(this, BaseInput);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "inputRef", _this.props.inputRef || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createRef());
    _defineProperty(_assertThisInitialized(_this), "state", {
      isFocused: _this.props.autoFocus || false,
      isMasked: _this.props.type === 'password',
      initialType: _this.props.type,
      isFocusVisibleForClear: false,
      isFocusVisibleForMaskToggle: false
    });
    _defineProperty(_assertThisInitialized(_this), "onInputKeyDown", function (e) {
      if (_this.props.clearOnEscape && e.key === 'Escape' && _this.inputRef.current && !_this.props.readOnly) {
        _this.clearValue(); // prevent event from closing modal or doing something unexpected

        e.stopPropagation();
      }
    });
    _defineProperty(_assertThisInitialized(_this), "onClearIconClick", function () {
      if (_this.inputRef.current) _this.clearValue(); // return focus to the input after click

      if (_this.inputRef.current) _this.inputRef.current.focus();
    });
    _defineProperty(_assertThisInitialized(_this), "onFocus", function (e) {
      _this.setState({
        isFocused: true
      });
      _this.props.onFocus(e);
    });
    _defineProperty(_assertThisInitialized(_this), "onBlur", function (e) {
      _this.setState({
        isFocused: false
      });
      _this.props.onBlur(e);
    });
    _defineProperty(_assertThisInitialized(_this), "handleFocusForMaskToggle", function (event) {
      if ((0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.isFocusVisible)(event)) {
        _this.setState({
          isFocusVisibleForMaskToggle: true
        });
      }
    });
    _defineProperty(_assertThisInitialized(_this), "handleBlurForMaskToggle", function (event) {
      if (_this.state.isFocusVisibleForMaskToggle !== false) {
        _this.setState({
          isFocusVisibleForMaskToggle: false
        });
      }
    });
    _defineProperty(_assertThisInitialized(_this), "handleFocusForClear", function (event) {
      if ((0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.isFocusVisible)(event)) {
        _this.setState({
          isFocusVisibleForClear: true
        });
      }
    });
    _defineProperty(_assertThisInitialized(_this), "handleBlurForClear", function (event) {
      if (_this.state.isFocusVisibleForClear !== false) {
        _this.setState({
          isFocusVisibleForClear: false
        });
      }
    });
    return _this;
  }
  _createClass(BaseInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
        autoFocus = _this$props.autoFocus,
        clearable = _this$props.clearable;
      if (this.inputRef.current) {
        if (autoFocus) {
          this.inputRef.current.focus();
        }
        if (clearable) {
          this.inputRef.current.addEventListener('keydown', this.onInputKeyDown);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var clearable = this.props.clearable;
      if (clearable && this.inputRef.current) {
        this.inputRef.current.removeEventListener('keydown', this.onInputKeyDown);
      }
    }
  }, {
    key: "clearValue",
    value: function clearValue() {
      // trigger a fake input change event (as if all text was deleted)
      var input = this.inputRef.current;
      if (input) {
        var nativeInputValue = Object.getOwnPropertyDescriptor(this.props.type === _constants__WEBPACK_IMPORTED_MODULE_2__.CUSTOM_INPUT_TYPE.textarea ?
        // todo(flow->ts): globals, not props of window object
        HTMLTextAreaElement.prototype : HTMLInputElement.prototype, 'value');
        if (nativeInputValue) {
          var nativeInputValueSetter = nativeInputValue.set;
          if (nativeInputValueSetter) {
            nativeInputValueSetter.call(input, '');
            var event = (0,_utils_create_event__WEBPACK_IMPORTED_MODULE_3__["default"])('input');
            input.dispatchEvent(event);
          }
        }
      }
    }
  }, {
    key: "getInputType",
    value: function getInputType() {
      // If the type prop is equal to "password" we allow the user to toggle between
      // masked and non masked text. Internally, we toggle between type "password"
      // and "text".
      if (this.props.type === 'password') {
        return this.state.isMasked ? 'password' : 'text';
      } else {
        return this.props.type;
      }
    }
  }, {
    key: "renderMaskToggle",
    value: function renderMaskToggle() {
      var _SIZE$mini$SIZE$compa,
        _this2 = this;
      if (this.props.type !== 'password') return null;
      var _getOverrides = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(this.props.overrides.MaskToggleButton, _styled_components__WEBPACK_IMPORTED_MODULE_5__.StyledMaskToggleButton),
        _getOverrides2 = _slicedToArray(_getOverrides, 2),
        MaskToggleButton = _getOverrides2[0],
        maskToggleButtonProps = _getOverrides2[1];
      var _getOverrides3 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(this.props.overrides.MaskToggleShowIcon, _icon_show__WEBPACK_IMPORTED_MODULE_6__["default"]),
        _getOverrides4 = _slicedToArray(_getOverrides3, 2),
        MaskToggleShowIcon = _getOverrides4[0],
        maskToggleIconShowProps = _getOverrides4[1];
      var _getOverrides5 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(this.props.overrides.MaskToggleHideIcon, _icon_hide__WEBPACK_IMPORTED_MODULE_7__["default"]),
        _getOverrides6 = _slicedToArray(_getOverrides5, 2),
        MaskToggleHideIcon = _getOverrides6[0],
        maskToggleIconHideProps = _getOverrides6[1];
      var label = this.state.isMasked ? 'Show password text' : 'Hide password text';
      var iconSize = (_SIZE$mini$SIZE$compa = {}, _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE.mini, '12px'), _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE.compact, '16px'), _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE["default"], '20px'), _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE.large, '24px'), _SIZE$mini$SIZE$compa)[this.props.size];
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MaskToggleButton, _extends({
        $size: this.props.size,
        $isFocusVisible: this.state.isFocusVisibleForMaskToggle,
        "aria-label": label,
        onClick: function onClick() {
          return _this2.setState(function (state) {
            return {
              isMasked: !state.isMasked
            };
          });
        },
        title: label,
        type: "button"
      }, maskToggleButtonProps, {
        onFocus: (0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.forkFocus)(maskToggleButtonProps, this.handleFocusForMaskToggle),
        onBlur: (0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.forkBlur)(maskToggleButtonProps, this.handleBlurForMaskToggle)
      }), this.state.isMasked ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MaskToggleShowIcon, _extends({
        size: iconSize,
        title: label
      }, maskToggleIconShowProps)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(MaskToggleHideIcon, _extends({
        size: iconSize,
        title: label
      }, maskToggleIconHideProps)));
    }
  }, {
    key: "renderClear",
    value: function renderClear() {
      var _SIZE$mini$SIZE$compa2,
        _this3 = this;
      var _this$props2 = this.props,
        clearable = _this$props2.clearable,
        value = _this$props2.value,
        disabled = _this$props2.disabled,
        readOnly = _this$props2.readOnly,
        _this$props2$override = _this$props2.overrides,
        overrides = _this$props2$override === void 0 ? {} : _this$props2$override;
      if (disabled || readOnly || !clearable || value == null || typeof value === 'string' && value.length === 0) {
        return null;
      }
      var _getOverrides7 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(overrides.ClearIconContainer, _styled_components__WEBPACK_IMPORTED_MODULE_5__.StyledClearIconContainer),
        _getOverrides8 = _slicedToArray(_getOverrides7, 2),
        ClearIconContainer = _getOverrides8[0],
        clearIconContainerProps = _getOverrides8[1];
      var _getOverrides9 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(overrides.ClearIcon, _styled_components__WEBPACK_IMPORTED_MODULE_5__.StyledClearIcon),
        _getOverrides10 = _slicedToArray(_getOverrides9, 2),
        ClearIcon = _getOverrides10[0],
        clearIconProps = _getOverrides10[1];
      var ariaLabel = 'Clear value';
      var sharedProps = (0,_utils__WEBPACK_IMPORTED_MODULE_8__.getSharedProps)(this.props, this.state);
      var iconSize = (_SIZE$mini$SIZE$compa2 = {}, _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE.mini, '14px'), _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE.compact, '14px'), _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE["default"], '16px'), _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE.large, '22px'), _SIZE$mini$SIZE$compa2)[this.props.size];
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearIconContainer, _extends({
        $alignTop: this.props.type === _constants__WEBPACK_IMPORTED_MODULE_2__.CUSTOM_INPUT_TYPE.textarea
      }, sharedProps, clearIconContainerProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearIcon, _extends({
        size: iconSize,
        tabIndex: 0,
        title: ariaLabel,
        "aria-label": ariaLabel,
        onClick: this.onClearIconClick,
        onKeyDown: function onKeyDown(event) {
          if (event.key && (event.key === 'Enter' || event.key === ' ')) {
            event.preventDefault();
            _this3.onClearIconClick();
          }
        },
        role: "button",
        $isFocusVisible: this.state.isFocusVisibleForClear
      }, sharedProps, clearIconProps, {
        onFocus: (0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.forkFocus)(clearIconProps, this.handleFocusForClear),
        onBlur: (0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.forkBlur)(clearIconProps, this.handleBlurForClear)
      })));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$overrides = this.props.overrides,
        InputContainerOverride = _this$props$overrides.InputContainer,
        InputOverride = _this$props$overrides.Input,
        BeforeOverride = _this$props$overrides.Before,
        AfterOverride = _this$props$overrides.After; // more here https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#Preventing_autofilling_with_autocompletenew-password

      var autoComplete = this.state.initialType === 'password' && this.props.autoComplete === BaseInput.defaultProps.autoComplete ? 'new-password' : this.props.autoComplete;
      var sharedProps = (0,_utils__WEBPACK_IMPORTED_MODULE_8__.getSharedProps)(this.props, this.state);
      var _getOverrides11 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(InputContainerOverride, _styled_components__WEBPACK_IMPORTED_MODULE_5__.InputContainer),
        _getOverrides12 = _slicedToArray(_getOverrides11, 2),
        InputContainer = _getOverrides12[0],
        inputContainerProps = _getOverrides12[1];
      var _getOverrides13 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(InputOverride, _styled_components__WEBPACK_IMPORTED_MODULE_5__.Input),
        _getOverrides14 = _slicedToArray(_getOverrides13, 2),
        Input = _getOverrides14[0],
        inputProps = _getOverrides14[1];
      var _getOverrides15 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(BeforeOverride, NullComponent),
        _getOverrides16 = _slicedToArray(_getOverrides15, 2),
        Before = _getOverrides16[0],
        beforeProps = _getOverrides16[1];
      var _getOverrides17 = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_4__.getOverrides)(AfterOverride, NullComponent),
        _getOverrides18 = _slicedToArray(_getOverrides17, 2),
        After = _getOverrides18[0],
        afterProps = _getOverrides18[1];
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(InputContainer, _extends({
        "data-baseweb": this.props['data-baseweb'] || 'base-input'
      }, sharedProps, inputContainerProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Before, _extends({}, sharedProps, beforeProps)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Input, _extends({
        ref: this.inputRef,
        "aria-activedescendant": this.props['aria-activedescendant'],
        "aria-autocomplete": this.props['aria-autocomplete'],
        "aria-controls": this.props['aria-controls'],
        "aria-errormessage": this.props['aria-errormessage'],
        "aria-haspopup": this.props['aria-haspopup'],
        "aria-label": this.props['aria-label'],
        "aria-labelledby": this.props['aria-labelledby'],
        "aria-describedby": this.props['aria-describedby'],
        "aria-invalid": this.props.error,
        "aria-required": this.props.required,
        autoComplete: autoComplete,
        disabled: this.props.disabled,
        readOnly: this.props.readOnly,
        id: this.props.id,
        inputMode: this.props.inputMode,
        maxLength: this.props.maxLength,
        name: this.props.name,
        onBlur: this.onBlur,
        onChange: this.props.onChange,
        onFocus: this.onFocus,
        onKeyDown: this.props.onKeyDown,
        onKeyPress: this.props.onKeyPress,
        onKeyUp: this.props.onKeyUp,
        pattern: this.props.pattern,
        placeholder: this.props.placeholder,
        type: this.getInputType(),
        required: this.props.required,
        role: this.props.role,
        value: this.props.value,
        min: this.props.min,
        max: this.props.max,
        step: this.props.step,
        rows: this.props.type === _constants__WEBPACK_IMPORTED_MODULE_2__.CUSTOM_INPUT_TYPE.textarea ? this.props.rows : null
      }, sharedProps, inputProps)), this.renderClear(), this.renderMaskToggle(), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(After, _extends({}, sharedProps, afterProps)));
    }
  }]);
  return BaseInput;
}(react__WEBPACK_IMPORTED_MODULE_0__.Component);
_defineProperty(BaseInput, "defaultProps", {
  'aria-activedescendant': null,
  'aria-autocomplete': null,
  'aria-controls': null,
  'aria-errormessage': null,
  'aria-haspopup': null,
  'aria-label': null,
  'aria-labelledby': null,
  'aria-describedby': null,
  adjoined: _constants__WEBPACK_IMPORTED_MODULE_2__.ADJOINED.none,
  autoComplete: 'on',
  autoFocus: false,
  disabled: false,
  error: false,
  positive: false,
  name: '',
  inputMode: 'text',
  onBlur: function onBlur() {},
  onChange: function onChange() {},
  onKeyDown: function onKeyDown() {},
  onKeyPress: function onKeyPress() {},
  onKeyUp: function onKeyUp() {},
  onFocus: function onFocus() {},
  onClear: function onClear() {},
  clearable: false,
  clearOnEscape: true,
  overrides: {},
  pattern: null,
  placeholder: '',
  required: false,
  role: null,
  size: _constants__WEBPACK_IMPORTED_MODULE_2__.SIZE["default"],
  type: 'text',
  readOnly: false
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BaseInput);

/***/ }),

/***/ "../../node_modules/baseui/esm/input/styled-components.js":
/*!****************************************************************!*\
  !*** ../../node_modules/baseui/esm/input/styled-components.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Input": () => (/* binding */ Input),
/* harmony export */   "InputContainer": () => (/* binding */ InputContainer),
/* harmony export */   "InputEnhancer": () => (/* binding */ InputEnhancer),
/* harmony export */   "Root": () => (/* binding */ Root),
/* harmony export */   "StyledClearIcon": () => (/* binding */ StyledClearIcon),
/* harmony export */   "StyledClearIconContainer": () => (/* binding */ StyledClearIconContainer),
/* harmony export */   "StyledMaskToggleButton": () => (/* binding */ StyledMaskToggleButton),
/* harmony export */   "getInputContainerStyles": () => (/* binding */ getInputContainerStyles),
/* harmony export */   "getInputStyles": () => (/* binding */ getInputStyles),
/* harmony export */   "getRootStyles": () => (/* binding */ getRootStyles)
/* harmony export */ });
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles */ "../../node_modules/baseui/esm/styles/styled.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "../../node_modules/baseui/esm/input/constants.js");
/* harmony import */ var _icon_delete_alt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icon/delete-alt */ "../../node_modules/baseui/esm/icon/delete-alt.js");
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/



var StyledMaskToggleButton = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('button', function (_ref) {
  var _SIZE$mini$SIZE$compa;
  var $theme = _ref.$theme,
    $size = _ref.$size,
    $isFocusVisible = _ref.$isFocusVisible;
  var pad = (_SIZE$mini$SIZE$compa = {}, _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.mini, $theme.sizing.scale400), _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.compact, $theme.sizing.scale400), _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE["default"], $theme.sizing.scale300), _defineProperty(_SIZE$mini$SIZE$compa, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.large, $theme.sizing.scale200), _SIZE$mini$SIZE$compa)[$size];
  return {
    display: 'flex',
    alignItems: 'center',
    borderTopStyle: 'none',
    borderBottomStyle: 'none',
    borderLeftStyle: 'none',
    borderRightStyle: 'none',
    background: 'none',
    paddingLeft: pad,
    paddingRight: pad,
    outline: $isFocusVisible ? "solid 3px ".concat($theme.colors.accent) : 'none',
    color: $theme.colors.contentPrimary
  };
});
StyledMaskToggleButton.displayName = "StyledMaskToggleButton";
StyledMaskToggleButton.displayName = 'StyledMaskToggleButton';
var StyledClearIconContainer = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', function (_ref2) {
  var _SIZE$mini$SIZE$compa2;
  var _ref2$$alignTop = _ref2.$alignTop,
    $alignTop = _ref2$$alignTop === void 0 ? false : _ref2$$alignTop,
    $size = _ref2.$size,
    $theme = _ref2.$theme;
  var pad = (_SIZE$mini$SIZE$compa2 = {}, _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.mini, $theme.sizing.scale200), _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.compact, $theme.sizing.scale200), _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE["default"], $theme.sizing.scale100), _defineProperty(_SIZE$mini$SIZE$compa2, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.large, $theme.sizing.scale0), _SIZE$mini$SIZE$compa2)[$size];
  return {
    display: 'flex',
    alignItems: $alignTop ? 'flex-start' : 'center',
    paddingLeft: pad,
    paddingRight: pad,
    paddingTop: $alignTop ? $theme.sizing.scale500 : '0px',
    color: $theme.colors.contentPrimary
  };
});
StyledClearIconContainer.displayName = "StyledClearIconContainer";
StyledClearIconContainer.displayName = 'StyledClearIconContainer';
var StyledClearIcon = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)(_icon_delete_alt__WEBPACK_IMPORTED_MODULE_2__["default"], function (_ref3) {
  var $theme = _ref3.$theme,
    $isFocusVisible = _ref3.$isFocusVisible;
  return {
    cursor: 'pointer',
    outline: $isFocusVisible ? "solid 3px ".concat($theme.colors.accent) : 'none'
  };
});
StyledClearIcon.displayName = "StyledClearIcon";
StyledClearIcon.displayName = 'StyledClearIcon';
function getInputPadding(size, sizing) {
  var _SIZE$mini$SIZE$compa3;
  return (_SIZE$mini$SIZE$compa3 = {}, _defineProperty(_SIZE$mini$SIZE$compa3, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.mini, {
    paddingTop: sizing.scale100,
    paddingBottom: sizing.scale100,
    paddingLeft: sizing.scale550,
    paddingRight: sizing.scale550
  }), _defineProperty(_SIZE$mini$SIZE$compa3, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.compact, {
    paddingTop: sizing.scale200,
    paddingBottom: sizing.scale200,
    paddingLeft: sizing.scale550,
    paddingRight: sizing.scale550
  }), _defineProperty(_SIZE$mini$SIZE$compa3, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE["default"], {
    paddingTop: sizing.scale400,
    paddingBottom: sizing.scale400,
    paddingLeft: sizing.scale550,
    paddingRight: sizing.scale550
  }), _defineProperty(_SIZE$mini$SIZE$compa3, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.large, {
    paddingTop: sizing.scale550,
    paddingBottom: sizing.scale550,
    paddingLeft: sizing.scale550,
    paddingRight: sizing.scale550
  }), _SIZE$mini$SIZE$compa3)[size];
}
function getRootPadding(adjoined, size, sizing, direction, hasIconTrailing) {
  var ifLeftPad = adjoined === _constants__WEBPACK_IMPORTED_MODULE_1__.ADJOINED.both || adjoined === _constants__WEBPACK_IMPORTED_MODULE_1__.ADJOINED.left && direction !== 'rtl' || adjoined === _constants__WEBPACK_IMPORTED_MODULE_1__.ADJOINED.right && direction === 'rtl' || hasIconTrailing && direction === 'rtl';
  var ifRightPad = adjoined === _constants__WEBPACK_IMPORTED_MODULE_1__.ADJOINED.both || adjoined === _constants__WEBPACK_IMPORTED_MODULE_1__.ADJOINED.right && direction !== 'rtl' || adjoined === _constants__WEBPACK_IMPORTED_MODULE_1__.ADJOINED.left && direction === 'rtl' || hasIconTrailing && direction !== 'rtl';
  return {
    paddingLeft: ifLeftPad ? sizing.scale550 : '0px',
    paddingRight: ifRightPad ? sizing.scale550 : '0px'
  };
}
function getFont(size, typography) {
  var _SIZE$mini$SIZE$compa4;
  return (_SIZE$mini$SIZE$compa4 = {}, _defineProperty(_SIZE$mini$SIZE$compa4, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.mini, typography.font100), _defineProperty(_SIZE$mini$SIZE$compa4, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.compact, typography.font200), _defineProperty(_SIZE$mini$SIZE$compa4, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE["default"], typography.font300), _defineProperty(_SIZE$mini$SIZE$compa4, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.large, typography.font400), _SIZE$mini$SIZE$compa4)[size];
}
function getRootColors($disabled, $isFocused, $error) {
  var $positive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var colors = arguments.length > 4 ? arguments[4] : undefined;
  if ($disabled) {
    return {
      borderLeftColor: colors.inputFillDisabled,
      borderRightColor: colors.inputFillDisabled,
      borderTopColor: colors.inputFillDisabled,
      borderBottomColor: colors.inputFillDisabled,
      backgroundColor: colors.inputFillDisabled
    };
  }
  if ($isFocused) {
    return {
      borderLeftColor: colors.borderSelected,
      borderRightColor: colors.borderSelected,
      borderTopColor: colors.borderSelected,
      borderBottomColor: colors.borderSelected,
      backgroundColor: colors.inputFillActive
    };
  }
  if ($error) {
    return {
      borderLeftColor: colors.inputBorderError,
      borderRightColor: colors.inputBorderError,
      borderTopColor: colors.inputBorderError,
      borderBottomColor: colors.inputBorderError,
      backgroundColor: colors.inputFillError
    };
  }
  if ($positive) {
    return {
      borderLeftColor: colors.inputBorderPositive,
      borderRightColor: colors.inputBorderPositive,
      borderTopColor: colors.inputBorderPositive,
      borderBottomColor: colors.inputBorderPositive,
      backgroundColor: colors.inputFillPositive
    };
  }
  return {
    borderLeftColor: colors.inputBorder,
    borderRightColor: colors.inputBorder,
    borderTopColor: colors.inputBorder,
    borderBottomColor: colors.inputBorder,
    backgroundColor: colors.inputFill
  };
}
function getRootBorderRadius(size, borders) {
  var radius = borders.inputBorderRadius;
  if (size === _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.mini) {
    radius = borders.inputBorderRadiusMini;
  }
  return {
    borderTopLeftRadius: radius,
    borderBottomLeftRadius: radius,
    borderTopRightRadius: radius,
    borderBottomRightRadius: radius
  };
}
var getRootStyles = function getRootStyles(props) {
  var $isFocused = props.$isFocused,
    $adjoined = props.$adjoined,
    $error = props.$error,
    $disabled = props.$disabled,
    $positive = props.$positive,
    $size = props.$size,
    $theme = props.$theme,
    _props$$theme = props.$theme,
    borders = _props$$theme.borders,
    colors = _props$$theme.colors,
    sizing = _props$$theme.sizing,
    typography = _props$$theme.typography,
    animation = _props$$theme.animation,
    $hasIconTrailing = props.$hasIconTrailing;
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({
    boxSizing: 'border-box',
    display: 'flex',
    overflow: 'hidden',
    width: '100%',
    borderLeftWidth: '2px',
    borderRightWidth: '2px',
    borderTopWidth: '2px',
    borderBottomWidth: '2px',
    borderLeftStyle: 'solid',
    borderRightStyle: 'solid',
    borderTopStyle: 'solid',
    borderBottomStyle: 'solid',
    transitionProperty: 'border',
    transitionDuration: animation.timing200,
    transitionTimingFunction: animation.easeOutCurve
  }, getRootBorderRadius($size, borders)), getFont($size, typography)), getRootColors($disabled, $isFocused, $error, $positive, colors)), getRootPadding($adjoined, $size, sizing, $theme.direction, $hasIconTrailing));
};
var Root = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', getRootStyles);
Root.displayName = "Root";
Root.displayName = 'Root'; // InputEnhancer

function getInputEnhancerPadding($size, sizing) {
  var _SIZE$mini$SIZE$compa5;
  return (_SIZE$mini$SIZE$compa5 = {}, _defineProperty(_SIZE$mini$SIZE$compa5, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.mini, {
    paddingRight: sizing.scale400,
    paddingLeft: sizing.scale400
  }), _defineProperty(_SIZE$mini$SIZE$compa5, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.compact, {
    paddingRight: sizing.scale400,
    paddingLeft: sizing.scale400
  }), _defineProperty(_SIZE$mini$SIZE$compa5, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE["default"], {
    paddingRight: sizing.scale300,
    paddingLeft: sizing.scale300
  }), _defineProperty(_SIZE$mini$SIZE$compa5, _constants__WEBPACK_IMPORTED_MODULE_1__.SIZE.large, {
    paddingRight: sizing.scale200,
    paddingLeft: sizing.scale200
  }), _SIZE$mini$SIZE$compa5)[$size];
}
function getInputEnhancerColors($disabled, $isFocused, $error, $positive, colors) {
  if ($disabled) {
    return {
      color: colors.inputEnhancerTextDisabled,
      backgroundColor: colors.inputFillDisabled
    };
  }
  if ($isFocused) {
    return {
      color: colors.contentPrimary,
      backgroundColor: colors.inputFillActive
    };
  }
  if ($error) {
    return {
      color: colors.contentPrimary,
      backgroundColor: colors.inputFillError
    };
  }
  if ($positive) {
    return {
      color: colors.contentPrimary,
      backgroundColor: colors.inputFillPositive
    };
  }
  return {
    color: colors.contentPrimary,
    backgroundColor: colors.inputFill
  };
}
var InputEnhancer = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', function (props) {
  var $size = props.$size,
    $disabled = props.$disabled,
    $isFocused = props.$isFocused,
    $error = props.$error,
    $positive = props.$positive,
    _props$$theme2 = props.$theme,
    colors = _props$$theme2.colors,
    sizing = _props$$theme2.sizing,
    typography = _props$$theme2.typography,
    animation = _props$$theme2.animation;
  return _objectSpread(_objectSpread(_objectSpread({
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    transitionProperty: 'color, background-color',
    transitionDuration: animation.timing200,
    transitionTimingFunction: animation.easeOutCurve
  }, getFont($size, typography)), getInputEnhancerPadding($size, sizing)), getInputEnhancerColors($disabled, $isFocused, $error, $positive, colors));
});
InputEnhancer.displayName = "InputEnhancer";
InputEnhancer.displayName = 'InputEnhancer'; // InputContainer

function getInputContainerColors($disabled, $isFocused, $error, $positive, colors) {
  if ($disabled) {
    return {
      color: colors.inputTextDisabled,
      backgroundColor: colors.inputFillDisabled
    };
  }
  if ($isFocused) {
    return {
      color: colors.contentPrimary,
      backgroundColor: colors.inputFillActive
    };
  }
  if ($error) {
    return {
      color: colors.contentPrimary,
      backgroundColor: colors.inputFillError
    };
  }
  if ($positive) {
    return {
      color: colors.contentPrimary,
      backgroundColor: colors.inputFillPositive
    };
  }
  return {
    color: colors.contentPrimary,
    backgroundColor: colors.inputFill
  };
}
var getInputContainerStyles = function getInputContainerStyles(props) {
  var $isFocused = props.$isFocused,
    $error = props.$error,
    $disabled = props.$disabled,
    $positive = props.$positive,
    $size = props.$size,
    _props$$theme3 = props.$theme,
    colors = _props$$theme3.colors,
    typography = _props$$theme3.typography,
    animation = _props$$theme3.animation;
  return _objectSpread(_objectSpread({
    display: 'flex',
    width: '100%',
    transitionProperty: 'background-color',
    transitionDuration: animation.timing200,
    transitionTimingFunction: animation.easeOutCurve
  }, getFont($size, typography)), getInputContainerColors($disabled, $isFocused, $error, $positive, colors));
};
var InputContainer = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', getInputContainerStyles);
InputContainer.displayName = "InputContainer";
InputContainer.displayName = 'InputContainer';
function getInputColors($disabled, $isFocused, $error, colors) {
  if ($disabled) {
    return {
      color: colors.inputTextDisabled,
      '-webkit-text-fill-color': colors.inputTextDisabled,
      caretColor: colors.contentPrimary,
      '::placeholder': {
        color: colors.inputPlaceholderDisabled
      }
    };
  }
  return {
    color: colors.contentPrimary,
    caretColor: colors.contentPrimary,
    '::placeholder': {
      color: colors.inputPlaceholder
    }
  };
}
var getInputStyles = function getInputStyles(props) {
  var $disabled = props.$disabled,
    $isFocused = props.$isFocused,
    $error = props.$error,
    $size = props.$size,
    _props$$theme4 = props.$theme,
    colors = _props$$theme4.colors,
    sizing = _props$$theme4.sizing,
    typography = _props$$theme4.typography;
  return _objectSpread(_objectSpread(_objectSpread({
    boxSizing: 'border-box',
    backgroundColor: 'transparent',
    borderLeftWidth: 0,
    borderRightWidth: 0,
    borderTopWidth: 0,
    borderBottomWidth: 0,
    borderLeftStyle: 'none',
    borderRightStyle: 'none',
    borderTopStyle: 'none',
    borderBottomStyle: 'none',
    outline: 'none',
    width: '100%',
    // See https://stackoverflow.com/a/33811151
    minWidth: 0,
    maxWidth: '100%',
    cursor: $disabled ? 'not-allowed' : 'text',
    margin: '0',
    paddingTop: '0',
    paddingBottom: '0',
    paddingLeft: '0',
    paddingRight: '0'
  }, getFont($size, typography)), getInputPadding($size, sizing)), getInputColors($disabled, $isFocused, $error, colors));
};
var Input = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('input', getInputStyles);
Input.displayName = "Input";
Input.displayName = 'Input';

/***/ }),

/***/ "../../node_modules/baseui/esm/input/utils.js":
/*!****************************************************!*\
  !*** ../../node_modules/baseui/esm/input/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSharedProps": () => (/* binding */ getSharedProps)
/* harmony export */ });
/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
function getSharedProps(props, state) {
  var disabled = props.disabled,
    error = props.error,
    positive = props.positive,
    adjoined = props.adjoined,
    size = props.size,
    required = props.required,
    resize = props.resize,
    readOnly = props.readOnly;
  var isFocused = state.isFocused;
  return {
    $isFocused: isFocused,
    $disabled: disabled,
    $error: error,
    $positive: positive,
    $adjoined: adjoined,
    $size: size,
    $required: required,
    $resize: resize,
    $isReadOnly: readOnly
  };
}

/***/ }),

/***/ "../../node_modules/baseui/esm/utils/create-event.js":
/*!***********************************************************!*\
  !*** ../../node_modules/baseui/esm/utils/create-event.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ createEvent)
/* harmony export */ });
/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/

/* global window document */

/** A safe way to create event objects down to IE11 */
function createEvent(eventName) {
  var event;
  if (typeof window.Event === 'function') {
    event = new window.Event(eventName, {
      bubbles: true,
      cancelable: true
    });
  } else {
    event = document.createEvent('Event');
    event.initEvent(eventName, true, true);
  }
  return event;
}

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_baseui_esm_input_base-input_js.chunk.js.map