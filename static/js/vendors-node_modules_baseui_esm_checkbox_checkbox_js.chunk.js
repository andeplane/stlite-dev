"use strict";
(globalThis["webpackChunk_stlite_mountable"] = globalThis["webpackChunk_stlite_mountable"] || []).push([["vendors-node_modules_baseui_esm_checkbox_checkbox_js"],{

/***/ "../../node_modules/baseui/esm/checkbox/checkbox.js":
/*!**********************************************************!*\
  !*** ../../node_modules/baseui/esm/checkbox/checkbox.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../node_modules/react/index.js");
/* harmony import */ var _helpers_overrides__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/overrides */ "../../node_modules/baseui/esm/helpers/overrides.js");
/* harmony import */ var _styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styled-components */ "../../node_modules/baseui/esm/checkbox/styled-components.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "../../node_modules/baseui/esm/checkbox/constants.js");
/* harmony import */ var _utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/focusVisible */ "../../node_modules/baseui/esm/utils/focusVisible.js");
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
      result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/





var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var StatelessCheckbox = /*#__PURE__*/function (_React$Component) {
  _inherits(StatelessCheckbox, _React$Component);
  var _super = _createSuper(StatelessCheckbox);
  function StatelessCheckbox() {
    var _this;
    _classCallCheck(this, StatelessCheckbox);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "state", {
      isFocused: _this.props.autoFocus || false,
      isFocusVisible: false,
      isHovered: false,
      isActive: false
    });
    _defineProperty(_assertThisInitialized(_this), "onMouseEnter", function (e) {
      _this.setState({
        isHovered: true
      });
      _this.props.onMouseEnter(e);
    });
    _defineProperty(_assertThisInitialized(_this), "onMouseLeave", function (e) {
      _this.setState({
        isHovered: false,
        isActive: false
      });
      _this.props.onMouseLeave(e);
    });
    _defineProperty(_assertThisInitialized(_this), "onMouseDown", function (e) {
      _this.setState({
        isActive: true
      });
      _this.props.onMouseDown(e);
    });
    _defineProperty(_assertThisInitialized(_this), "onMouseUp", function (e) {
      _this.setState({
        isActive: false
      });
      _this.props.onMouseUp(e);
    });
    _defineProperty(_assertThisInitialized(_this), "onFocus", function (e) {
      _this.setState({
        isFocused: true
      });
      _this.props.onFocus(e);
      if ((0,_utils_focusVisible__WEBPACK_IMPORTED_MODULE_1__.isFocusVisible)(e)) {
        _this.setState({
          isFocusVisible: true
        });
      }
    });
    _defineProperty(_assertThisInitialized(_this), "onBlur", function (e) {
      _this.setState({
        isFocused: false
      });
      _this.props.onBlur(e);
      if (_this.state.isFocusVisible !== false) {
        _this.setState({
          isFocusVisible: false
        });
      }
    });
    return _this;
  }
  _createClass(StatelessCheckbox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
        autoFocus = _this$props.autoFocus,
        inputRef = _this$props.inputRef;
      if (autoFocus && inputRef.current) {
        inputRef.current.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
        _this$props2$override = _this$props2.overrides,
        overrides = _this$props2$override === void 0 ? {} : _this$props2$override,
        onChange = _this$props2.onChange,
        _this$props2$labelPla = _this$props2.labelPlacement,
        labelPlacement = _this$props2$labelPla === void 0 ? this.props.checkmarkType === _constants__WEBPACK_IMPORTED_MODULE_2__.STYLE_TYPE.toggle ? 'left' : 'right' : _this$props2$labelPla,
        inputRef = _this$props2.inputRef,
        isIndeterminate = _this$props2.isIndeterminate,
        error = _this$props2.error,
        disabled = _this$props2.disabled,
        value = _this$props2.value,
        name = _this$props2.name,
        type = _this$props2.type,
        checked = _this$props2.checked,
        children = _this$props2.children,
        required = _this$props2.required,
        title = _this$props2.title;
      var RootOverride = overrides.Root,
        CheckmarkOverride = overrides.Checkmark,
        LabelOverride = overrides.Label,
        InputOverride = overrides.Input,
        ToggleOverride = overrides.Toggle,
        ToggleTrackOverride = overrides.ToggleTrack;
      var Root = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverride)(RootOverride) || _styled_components__WEBPACK_IMPORTED_MODULE_4__.Root;
      var Checkmark = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverride)(CheckmarkOverride) || _styled_components__WEBPACK_IMPORTED_MODULE_4__.Checkmark;
      var Label = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverride)(LabelOverride) || _styled_components__WEBPACK_IMPORTED_MODULE_4__.Label;
      var Input = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverride)(InputOverride) || _styled_components__WEBPACK_IMPORTED_MODULE_4__.Input;
      var Toggle = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverride)(ToggleOverride) || _styled_components__WEBPACK_IMPORTED_MODULE_4__.Toggle;
      var ToggleTrack = (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverride)(ToggleTrackOverride) || _styled_components__WEBPACK_IMPORTED_MODULE_4__.ToggleTrack;
      var inputEvents = {
        onChange: onChange,
        onFocus: this.onFocus,
        onBlur: this.onBlur
      };
      var mouseEvents = {
        onMouseEnter: this.onMouseEnter,
        onMouseLeave: this.onMouseLeave,
        onMouseDown: this.onMouseDown,
        onMouseUp: this.onMouseUp
      };
      var sharedProps = {
        $isFocused: this.state.isFocused,
        $isFocusVisible: this.state.isFocusVisible,
        $isHovered: this.state.isHovered,
        $isActive: this.state.isActive,
        $error: error,
        $checked: checked,
        $isIndeterminate: isIndeterminate,
        $required: required,
        $disabled: disabled,
        $value: value
      };
      var labelComp = children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Label, _extends({
        $labelPlacement: labelPlacement
      }, sharedProps, (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverrideProps)(LabelOverride)), this.props.containsInteractiveElement ? /*#__PURE__*/
      // Prevents the event from bubbling up to the label and moving focus to the radio button
      // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions
      react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {
        onClick: function onClick(e) {
          return e.preventDefault();
        }
      }, children) : children);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Root, _extends({
        "data-baseweb": "checkbox",
        title: title || null,
        $labelPlacement: labelPlacement
      }, sharedProps, mouseEvents, (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverrideProps)(RootOverride)), (labelPlacement === 'top' || labelPlacement === 'left') && labelComp, this.props.checkmarkType === _constants__WEBPACK_IMPORTED_MODULE_2__.STYLE_TYPE.toggle ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(ToggleTrack, _extends({}, sharedProps, (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverrideProps)(ToggleTrackOverride)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Toggle, _extends({}, sharedProps, (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverrideProps)(ToggleOverride)))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Checkmark, _extends({}, sharedProps, (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverrideProps)(CheckmarkOverride))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Input, _extends({
        value: value,
        name: name,
        checked: checked,
        required: required,
        "aria-label": this.props['aria-label'] || this.props.ariaLabel,
        "aria-checked": isIndeterminate ? 'mixed' : checked,
        "aria-describedby": this.props['aria-describedby'],
        "aria-errormessage": this.props['aria-errormessage'],
        "aria-invalid": error || null,
        "aria-required": required || null,
        disabled: disabled,
        type: type,
        ref: inputRef // Prevent a second click event from firing when label is clicked.
        // See https://github.com/uber/baseweb/issues/3847
        ,

        onClick: stopPropagation
      }, sharedProps, inputEvents, (0,_helpers_overrides__WEBPACK_IMPORTED_MODULE_3__.getOverrideProps)(InputOverride))), (labelPlacement === 'bottom' || labelPlacement === 'right') && labelComp);
    }
  }]);
  return StatelessCheckbox;
}(react__WEBPACK_IMPORTED_MODULE_0__.Component);
_defineProperty(StatelessCheckbox, "defaultProps", {
  overrides: {},
  // todo(flow->ts): missing field in flow types
  checked: false,
  containsInteractiveElement: false,
  disabled: false,
  autoFocus: false,
  isIndeterminate: false,
  inputRef: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createRef(),
  error: false,
  type: 'checkbox',
  checkmarkType: _constants__WEBPACK_IMPORTED_MODULE_2__.STYLE_TYPE["default"],
  onChange: function onChange() {},
  onMouseEnter: function onMouseEnter() {},
  onMouseLeave: function onMouseLeave() {},
  onMouseDown: function onMouseDown() {},
  onMouseUp: function onMouseUp() {},
  onFocus: function onFocus() {},
  onBlur: function onBlur() {}
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StatelessCheckbox);

/***/ }),

/***/ "../../node_modules/baseui/esm/checkbox/constants.js":
/*!***********************************************************!*\
  !*** ../../node_modules/baseui/esm/checkbox/constants.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LABEL_PLACEMENT": () => (/* binding */ LABEL_PLACEMENT),
/* harmony export */   "STATE_TYPE": () => (/* binding */ STATE_TYPE),
/* harmony export */   "STYLE_TYPE": () => (/* binding */ STYLE_TYPE)
/* harmony export */ });
/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/

/* eslint-disable import/prefer-default-export */
var STATE_TYPE = {
  change: 'CHANGE'
};
var STYLE_TYPE = Object.freeze({
  default: 'default',
  toggle: 'toggle',
  // maintaining key with aliased value to assist in transition to v11 but will be removed soon after release
  toggle_round: 'toggle'
});
var LABEL_PLACEMENT = Object.freeze({
  top: 'top',
  right: 'right',
  bottom: 'bottom',
  left: 'left'
});
/* eslint-enable import/prefer-default-export */

/***/ }),

/***/ "../../node_modules/baseui/esm/checkbox/styled-components.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/baseui/esm/checkbox/styled-components.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Checkmark": () => (/* binding */ Checkmark),
/* harmony export */   "Input": () => (/* binding */ Input),
/* harmony export */   "Label": () => (/* binding */ Label),
/* harmony export */   "Root": () => (/* binding */ Root),
/* harmony export */   "Toggle": () => (/* binding */ Toggle),
/* harmony export */   "ToggleTrack": () => (/* binding */ ToggleTrack)
/* harmony export */ });
/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles */ "../../node_modules/baseui/esm/styles/styled.js");
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/

function getBorderColor(props) {
  var $disabled = props.$disabled,
    $checked = props.$checked,
    $error = props.$error,
    $isIndeterminate = props.$isIndeterminate,
    $theme = props.$theme,
    $isFocusVisible = props.$isFocusVisible;
  var colors = $theme.colors;
  if ($disabled) {
    return colors.tickFillDisabled;
  } else if ($checked || $isIndeterminate) {
    return 'transparent';
  } else if ($error) {
    return colors.borderNegative;
  } else if ($isFocusVisible) {
    return colors.borderSelected;
  } else {
    return colors.tickBorder;
  }
}
function getLabelPadding(props) {
  var _props$$labelPlacemen = props.$labelPlacement,
    $labelPlacement = _props$$labelPlacemen === void 0 ? '' : _props$$labelPlacemen,
    $theme = props.$theme;
  var sizing = $theme.sizing;
  var scale300 = sizing.scale300;
  var paddingDirection;
  switch ($labelPlacement) {
    case 'top':
      paddingDirection = 'Bottom';
      break;
    case 'bottom':
      paddingDirection = 'Top';
      break;
    case 'left':
      paddingDirection = 'Right';
      break;
    default:
    case 'right':
      paddingDirection = 'Left';
      break;
  }
  if ($theme.direction === 'rtl' && paddingDirection === 'Left') {
    paddingDirection = 'Right';
  } else if ($theme.direction === 'rtl' && paddingDirection === 'Right') {
    paddingDirection = 'Left';
  }
  return _defineProperty({}, "padding".concat(paddingDirection), scale300);
}
function getBackgroundColor(props) {
  var $disabled = props.$disabled,
    $checked = props.$checked,
    $isIndeterminate = props.$isIndeterminate,
    $error = props.$error,
    $isHovered = props.$isHovered,
    $isActive = props.$isActive,
    $theme = props.$theme;
  var colors = $theme.colors;
  if ($disabled) {
    if ($checked || $isIndeterminate) {
      return colors.tickFillDisabled;
    } else {
      return colors.tickFill;
    }
  } else if ($error && ($isIndeterminate || $checked)) {
    if ($isActive) {
      return colors.tickFillErrorSelectedHoverActive;
    } else if ($isHovered) {
      return colors.tickFillErrorSelectedHover;
    } else {
      return colors.tickFillErrorSelected;
    }
  } else if ($error) {
    if ($isActive) {
      return colors.tickFillErrorHoverActive;
    } else if ($isHovered) {
      return colors.tickFillErrorHover;
    } else {
      return colors.tickFillError;
    }
  } else if ($isIndeterminate || $checked) {
    if ($isActive) {
      return colors.tickFillSelectedHoverActive;
    } else if ($isHovered) {
      return colors.tickFillSelectedHover;
    } else {
      return colors.tickFillSelected;
    }
  } else {
    if ($isActive) {
      return colors.tickFillActive;
    } else if ($isHovered) {
      return colors.tickFillHover;
    } else {
      return colors.tickFill;
    }
  }
}
function getLabelColor(props) {
  var $disabled = props.$disabled,
    $theme = props.$theme;
  var colors = $theme.colors;
  return $disabled ? colors.contentSecondary : colors.contentPrimary;
}
var Root = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('label', function (props) {
  var $disabled = props.$disabled,
    $labelPlacement = props.$labelPlacement;
  return {
    flexDirection: $labelPlacement === 'top' || $labelPlacement === 'bottom' ? 'column' : 'row',
    display: 'flex',
    alignItems: $labelPlacement === 'top' || $labelPlacement === 'bottom' ? 'center' : 'flex-start',
    cursor: $disabled ? 'not-allowed' : 'pointer',
    userSelect: 'none'
  };
});
Root.displayName = "Root";
Root.displayName = 'Root';
var Checkmark = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('span', function (props) {
  var $checked = props.$checked,
    $disabled = props.$disabled,
    $error = props.$error,
    $isIndeterminate = props.$isIndeterminate,
    $theme = props.$theme,
    $isFocusVisible = props.$isFocusVisible;
  var sizing = $theme.sizing,
    animation = $theme.animation;
  var tickColor = $disabled ? $theme.colors.tickMarkFillDisabled : $error ? $theme.colors.tickMarkFillError : $theme.colors.tickMarkFill;
  var indeterminate = encodeURIComponent("\n    <svg width=\"14\" height=\"4\" viewBox=\"0 0 14 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M14 0.5H0V3.5H14V0.5Z\" fill=\"".concat(tickColor, "\"/>\n    </svg>\n  "));
  var check = encodeURIComponent("\n    <svg width=\"17\" height=\"13\" viewBox=\"0 0 17 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M6.50002 12.6L0.400024 6.60002L2.60002 4.40002L6.50002 8.40002L13.9 0.900024L16.1 3.10002L6.50002 12.6Z\" fill=\"".concat(tickColor, "\"/>\n    </svg>\n  "));
  var borderRadius = $theme.borders.checkboxBorderRadius;
  var borderColor = getBorderColor(props);
  return {
    flex: '0 0 auto',
    transitionDuration: animation.timing200,
    transitionTimingFunction: animation.easeOutCurve,
    transitionProperty: 'background-image, border-color, background-color',
    width: sizing.scale700,
    height: sizing.scale700,
    left: '4px',
    top: '4px',
    boxSizing: 'border-box',
    borderLeftStyle: 'solid',
    borderRightStyle: 'solid',
    borderTopStyle: 'solid',
    borderBottomStyle: 'solid',
    borderLeftWidth: '3px',
    borderRightWidth: '3px',
    borderTopWidth: '3px',
    borderBottomWidth: '3px',
    borderLeftColor: borderColor,
    borderRightColor: borderColor,
    borderTopColor: borderColor,
    borderBottomColor: borderColor,
    borderTopLeftRadius: borderRadius,
    borderTopRightRadius: borderRadius,
    borderBottomRightRadius: borderRadius,
    borderBottomLeftRadius: borderRadius,
    outline: $isFocusVisible && $checked ? "3px solid ".concat($theme.colors.accent) : 'none',
    display: 'inline-block',
    verticalAlign: 'middle',
    backgroundImage: $isIndeterminate ? "url('data:image/svg+xml,".concat(indeterminate, "');") : $checked ? "url('data:image/svg+xml,".concat(check, "');") : null,
    backgroundColor: getBackgroundColor(props),
    backgroundRepeat: 'no-repeat',
    backgroundPosition: 'center',
    backgroundSize: 'contain',
    marginTop: $theme.sizing.scale0,
    marginBottom: $theme.sizing.scale0,
    marginLeft: $theme.sizing.scale0,
    marginRight: $theme.sizing.scale0
  };
});
Checkmark.displayName = "Checkmark";
Checkmark.displayName = 'Checkmark';
var Label = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', function (props) {
  var $theme = props.$theme;
  var typography = $theme.typography;
  return _objectSpread(_objectSpread(_objectSpread({
    verticalAlign: 'middle'
  }, getLabelPadding(props)), {}, {
    color: getLabelColor(props)
  }, typography.LabelMedium), {}, {
    lineHeight: '24px'
  });
});
Label.displayName = "Label";
Label.displayName = 'Label'; // tricky style for focus event cause display: none doesn't work

var Input = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('input', {
  opacity: 0,
  width: 0,
  height: 0,
  overflow: 'hidden',
  margin: 0,
  padding: 0,
  position: 'absolute'
});
Input.displayName = "Input";
Input.displayName = 'Input';
var Toggle = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', function (props) {
  var backgroundColor = props.$theme.colors.toggleFill;
  if (props.$disabled) {
    backgroundColor = props.$theme.colors.toggleFillDisabled;
  } else if (props.$checked && props.$error) {
    backgroundColor = props.$theme.colors.tickFillErrorSelected;
  } else if (props.$checked) {
    backgroundColor = props.$theme.colors.toggleFillChecked;
  }
  return {
    backgroundColor: backgroundColor,
    borderTopLeftRadius: '50%',
    borderTopRightRadius: '50%',
    borderBottomRightRadius: '50%',
    borderBottomLeftRadius: '50%',
    boxShadow: props.$isFocusVisible ? "0 0 0 3px ".concat(props.$theme.colors.accent) : props.$isHovered && !props.$disabled ? props.$theme.lighting.shadow500 : props.$theme.lighting.shadow400,
    outline: 'none',
    height: props.$theme.sizing.scale700,
    width: props.$theme.sizing.scale700,
    transform: props.$checked ? "translateX(".concat(props.$theme.direction === 'rtl' ? '-100%' : '100%', ")") : null,
    transition: "transform ".concat(props.$theme.animation.timing200)
  };
});
Toggle.displayName = "Toggle";
Toggle.displayName = 'Toggle';
var ToggleTrack = (0,_styles__WEBPACK_IMPORTED_MODULE_0__.styled)('div', function (props) {
  var backgroundColor = props.$theme.colors.toggleTrackFill;
  if (props.$disabled) {
    backgroundColor = props.$theme.colors.toggleTrackFillDisabled;
  } else if (props.$error && props.$checked) {
    backgroundColor = props.$theme.colors.tickFillError;
  }
  return {
    alignItems: 'center',
    backgroundColor: backgroundColor,
    borderTopLeftRadius: '7px',
    borderTopRightRadius: '7px',
    borderBottomRightRadius: '7px',
    borderBottomLeftRadius: '7px',
    display: 'flex',
    height: props.$theme.sizing.scale550,
    marginTop: props.$theme.sizing.scale200,
    marginBottom: props.$theme.sizing.scale100,
    marginLeft: props.$theme.sizing.scale200,
    marginRight: props.$theme.sizing.scale100,
    width: props.$theme.sizing.scale1000
  };
});
ToggleTrack.displayName = "ToggleTrack";
ToggleTrack.displayName = 'ToggleTrack';

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_baseui_esm_checkbox_checkbox_js.chunk.js.map